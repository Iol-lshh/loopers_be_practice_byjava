EXPLAIN
-> Limit: 20 row(s)  (actual time=277..277 rows=20 loops=1)
    -> Sort: u.b, u.like_count DESC, p.id, limit input to 20 row(s) per chunk  (actual time=277..277 rows=20 loops=1)
        -> Stream results  (cost=596997 rows=100) (actual time=276..277 rows=100 loops=1)
            -> Nested loop inner join  (cost=596997 rows=100) (actual time=276..277 rows=100 loops=1)
                -> Table scan on u  (cost=596935..596939 rows=100) (actual time=276..276 rows=100 loops=1)
                    -> Union all materialize  (cost=596935..596935 rows=100) (actual time=276..276 rows=100 loops=1)
                        -> Table scan on h  (cost=47143..47143 rows=0.5) (actual time=0.0179..0.0179 rows=0 loops=1)
                            -> Materialize CTE hot  (cost=47141..47141 rows=0.5) (actual time=0.0164..0.0164 rows=0 loops=1)
                                -> Limit: 100 row(s)  (cost=47141 rows=0.5) (actual time=0.015..0.015 rows=0 loops=1)
                                    -> Nested loop inner join  (cost=47141 rows=0.5) (actual time=0.0148..0.0148 rows=0 loops=1)
                                        -> Filter: (ls.target_type = 'PRODUCT')  (cost=0.35 rows=1) (actual time=0.0137..0.0137 rows=0 loops=1)
                                            -> Covering index lookup on ls using idx_ls_type_like_tid (target_type='PRODUCT')  (cost=0.35 rows=1) (actual time=0.0109..0.0109 rows=0 loops=1)
                                        -> Filter: ((p.id = ls.target_id) and (p.state = 'OPEN'))  (cost=1447 rows=0.5) (never executed)
                                            -> Covering index lookup on p using idx_product_state_brand_id (state='OPEN')  (cost=1447 rows=456934) (never executed)
                        -> Table scan on c  (cost=549778..549782 rows=100) (actual time=276..276 rows=100 loops=1)
                            -> Materialize CTE cold  (cost=549778..549778 rows=100) (actual time=276..276 rows=100 loops=1)
                                -> Limit: 100 row(s)  (cost=549768 rows=100) (actual time=276..276 rows=100 loops=1)
                                    -> Filter: (ls.target_id is null)  (cost=549768 rows=456934) (actual time=276..276 rows=100 loops=1)
                                        -> Nested loop antijoin  (cost=549768 rows=456934) (actual time=276..276 rows=100 loops=1)
                                            -> Sort: p.id  (cost=47140 rows=456934) (actual time=276..276 rows=100 loops=1)
                                                -> Filter: (p.state = 'OPEN')  (cost=47140 rows=456934) (actual time=0.0249..149 rows=721559 loops=1)
                                                    -> Index lookup on p using idx_product_state_brand_id (state='OPEN')  (cost=47140 rows=456934) (actual time=0.0237..95.3 rows=721559 loops=1)
                                            -> Filter: (ls.target_type = 'PRODUCT')  (cost=1 rows=1) (actual time=0.00213..0.00213 rows=0 loops=100)
                                                -> Single-row covering index lookup on ls using PRIMARY (target_id=p.id, target_type='PRODUCT')  (cost=1 rows=1) (actual time=0.00204..0.00204 rows=0 loops=100)
                -> Single-row index lookup on p using PRIMARY (id=u.id)  (cost=0.47 rows=1) (actual time=0.00181..0.00183 rows=1 loops=100)
